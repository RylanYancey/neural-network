
#include "network.h"

int main() {
    
    NetDescriptor desc;
        desc.inputs = 2;
        desc.layers = 2;
        desc.layer_size = 2;
        desc.outputs = 1;
        desc.activation = Actv::Sigmoid;
        desc.epochs = 10000;
        desc.target_accuracy = 0.001;
        desc.learning_rate = 0.1;
        desc.linear_output = true;
        desc.name = "network.json";
        desc.log_freq = 100;
        
    // Change to desc.name to use an existing file
    Network net(desc);


    /*
    vector<vector<double>> inputs {
        // 1
        { 0.00270507, 1.86303, 0.0127569, 255, 10.2025, 0.00401447, 1.28255, 0.300691, 222.38, 0, 0.00185347, 1.67274, 0.865006, 255, 9.53966, 0.00181854, 1.60925, 0.645171, 255, 121.99, 1, 16, 17, 11, 10, 5, 6  },
        { 0.00484929, 1.60974, 0.805877, 255, 74.3527, 0.00372638, 1.41934, 0.733655, 255, 13.0436, 0.00452802, 1.2174, 0.211201, 255, 52.3832, 0.000159661, 1.03002, 0.875399, 255, 122.79, 2, 20, 16, 1, 2, 4, 6  },
        { 0.00276304, 1.78703, 0.674716, 170.774, 0, 0.00105718, 1.21917, 0.155166, 194.247, 0, 0.00355196, 1.97255, 0.277835, 172.622, 0, 0.00350893, 1.37974, 0.476662, 255, 0.338592, 2, 2, 10, 12, 4, 4, 5  }, 
        { 0.00113596, 1.69938, 0.68113, 171.025, 0, 0.0015462, 1.61938, 0.0127751, 255, 94.7176, 0.00323123, 1.84162, 0.581532, 217.008, 0, 0.00475377, 1.24206, 0.0951242, 255, 20.2117, 6, 20, 6, 5, 9, 11, 19  }, 
        { 0.00219555, 1.75715, 0.923403, 134.359, 0, 0.001218, 1.39975, 0.588355, 216.819, 0, 0.0047356, 1.00691, 0.650882, 255, 84.1305, 0.000706018, 1.5125, 0.413836, 255, 14.447, 8, 7, 4, 13, 20, 15, 10  },
        { 0.00213676, 1.94766, 0.636269, 255, 54.284, 0.0017624, 1.06429, 0.879193, 255, 71.2548, 0.00289984, 1.95349, 0.77399, 178.138, 0, 0.00175286, 1.40543, 0.670863, 138.779, 0, 3, 5, 13, 2, 14, 18, 12  }, 
        { 0.00173253, 1.8882, 0.706773, 199.368, 0, 0.00176332, 1.37841, 0.520817, 191.616, 0, 0.00272744, 1.89154, 0.882969, 182.135, 0, 0.00264362, 1.17662, 0.571433, 255, 103.736, 2, 9, 16, 2, 9, 4, 10  },  
        { 0.00347675, 1.77267, 0.685278, 255, 62.1738, 0.00170522, 1.20096, 0.826497, 151.822, 0, 0.00282782, 1.44309, 0.319197, 255, 82.0357, 0.000523347, 1.02099, 0.26736, 255, 100.316, 3, 14, 13, 2, 17, 10, 2 }, 
        { 0.00476252, 1.21013, 0.490943, 161.268, 0, 0.0024397, 1.83764, 0.283307, 255, 102.995, 0.00264513, 1.71639, 0.830757, 180.347, 0, 0.00318678, 1.59424, 0.159658, 255, 55.9616, 3, 7, 11, 9, 11, 4, 17 }, 
        { 0.0016957, 1.61007, 0.69565, 255, 108.625, 0.000682761, 1.44109, 0.514699, 137.907, 0, 0.00231052, 1.76288, 0.685254, 222.337, 0, 0.00272278, 1.04721, 0.47075, 168.163, 0, 5, 18, 20, 1, 16, 1, 18  }, 
        { 0.00428919, 1.90329, 0.817121, 231.309, 0, 0.00464556, 1.83146, 0.0464488, 255, 74.1832, 0.00449845, 1.78895, 0.171168, 210.121, 0, 0.00418098, 1.62542, 0.121152, 135.936, 0, 1, 10, 10, 11, 16, 7, 11 }, 
        { 0.00413089, 1.65385, 0.815692, 255, 28.4068, 0.000804681, 1.50577, 0.80231, 239.019, 0, 0.00423701, 1.68911, 0.601922, 244.58, 0, 0.00355709, 1.87332, 0.250994, 255, 16.3961, 1, 13, 5, 15, 6, 15, 7 }, 
        { 0.00477001, 1.94155, 0.684591, 148.848, 0, 0.0027417, 1.29524, 0.473462, 255, 87.845, 0.000124077, 1.1752, 0.580964, 141.282, 0, 0.00202247, 1.06761, 0.507499, 255, 54.1982, 3, 2, 13, 18, 5, 10, 15 },
        { 0.0019533, 1.90459, 0.997173, 185.084, 0, 0.00399477, 1.74446, 0.169176, 255, 109.236, 0.00487476, 1.90342, 0.663874, 180.297, 0, 0.00150277, 1.9449, 0.504758, 255, 38.516, 1, 16, 9, 14, 11, 12, 10 },
        { 0.00189618, 1.39482, 0.858959, 203.588, 0, 0.000873493, 1.01313, 0.132998, 247.968, 0, 0.00392456, 1.50658, 0.891899, 147.929, 0, 0.00311877, 1.2809, 0.0635017, 217.559, 0, 3, 2, 16, 7, 8, 19, 7  },
        { 0.000631005, 1.93822, 0.614796, 255, 76.5582, 0.00497474, 1.94795, 0.444241, 136.201, 0, 0.00363406, 1.96054, 0.578739, 255, 121.917, 0.000924462, 1.47105, 0.483637, 255, 13.2171, 10, 14, 16, 1, 20, 17, 9  },
        { 0.00433045, 1.72669, 0.675198, 143.103, 0, 0.00100252, 1.51936, 0.419214, 255, 114.389, 0.000964313, 1.40726, 0.959375, 156.18, 0, 0.00398614, 1.1254, 0.422438, 159.397, 0, 4, 15, 4, 14, 13, 5, 12  },
        { 0.00156085, 1.6125, 0.787242, 255, 113.434, 0.00104741, 1.27104, 0.999878, 255, 74.7713, 0.00432384, 1.903, 0.448881, 174.502, 0, 0.00156313, 1.88771, 0.749858, 173.577, 0, 4, 13, 14, 8, 12, 8, 2  },
        { 0.00463036, 1.87058, 0.333251, 255, 95.6922, 0.00357103, 1.13389, 0.653132, 177.361, 0, 0.00442271, 1.87366, 0.515527, 255, 8.3345, 0.000178438, 1.81528, 0.523253, 255, 115.091, 3, 10, 11, 16, 1, 6, 10  },
        { 0.00241662, 1.88697, 0.984259, 160.512, 0, 0.00144907, 1.66075, 0.200557, 154.25, 0, 0.0021687, 1.89693, 0.417515, 202.46, 0, 0.00151947, 1.45771, 0.419775, 131.338, 0, 1, 9, 14, 7, 11, 14, 8  },
        { 0.00207508, 1.7614, 0.682793, 255, 110.16, 0.000745634, 1.88365, 0.228361, 255, 9.20842, 0.00480992, 1.62782, 0.73653, 200.467, 0, 0.00241244, 1.99134, 0.340817, 229.472, 0, 4, 19, 2, 12, 15, 10, 20  },
        { 0.00218193, 1.68402, 0.883308, 255, 101.892, 0.00217739, 1.92515, 0.748418, 255, 109.344, 0.00266755, 1.34283, 0.807718, 213.11, 0, 0.00135165, 1.36632, 0.508574, 144.699, 0, 4, 5, 14, 10, 13, 8, 9  },
        { 0.00416628, 1.04543, 0.586615, 255, 106.995, 0.00250314, 1.95421, 0.211685, 255, 73.5747, 0.00458286, 1.87487, 0.667941, 180.687, 0, 0.00402535, 1.16216, 0.380176, 255, 101.05, 3, 18, 11, 2, 18, 14, 14  },
        { 0.00349589, 1.78998, 0.525944, 255, 63.63, 0.00316347, 1.33188, 0.983595, 129.431, 0, 0.00451742, 1.83121, 0.963677, 255, 45.6952, 0.00200382, 1.73548, 0.486777, 255, 71.9631, 1, 9, 9, 16, 6, 9, 14  },
        { 0.00448902, 1.93462, 0.991079, 255, 77.0791, 0.000793581, 1.64656, 0.354434, 255, 120.746, 0.00277942, 1.01796, 0.596675, 190.239, 0, 0.000737345, 1.35112, 0.751326, 133.478, 0, 1, 19, 15, 14, 12, 17, 9  },
        // 0
        { 0.00216808, 1.61839, 0.989082, 237.325, 0, 0.000378074, 1.22191, 0.747171, 255, 118.95, 0.00377506, 1.64065, 0.0411117, 255, 25.4998, 0.000666612, 1.37031, 0.834874, 255, 80.276, 20, 2, 3, 6, 2, 11, 3  },
        { 0.00377359, 1.17922, 0.600329, 255, 55.8722, 0.00222366, 1.61706, 0.0471957, 252.593, 0, 0.00373562, 1.07254, 0.238654, 255, 114.764, 0.00104128, 1.64827, 0.397884, 216.675, 0, 11, 7, 4, 14, 9, 11, 1  },
        { 0.000469944, 1.90982, 0.929201, 255, 83.9618, 0.0030208, 1.77612, 0.200249, 255, 71.9043, 0.00208477, 1.14371, 0.491331, 233.988, 0, 0.00299337, 1.54423, 0.688348, 255, 15.8308, 8, 17, 4, 18, 3, 14, 1  },
        { 0.000923755, 1.5631, 0.0725959, 255, 67.3836, 0.00370551, 1.35253, 0.808921, 255, 1.40718, 0.00283056, 1.78698, 0.771786, 255, 25.0213, 0.00239994, 1.95016, 0.437521, 173.933, 0, 18, 17, 9, 15, 6, 19, 16  }, 
        { 0.00364159, 1.52163, 0.616343, 255, 77.0171, 0.00208782, 1.90843, 0.599694, 182.009, 0, 0.00251268, 1.64928, 0.105144, 255, 112.814, 0.00456596, 1.00668, 0.0726746, 143.152, 0, 19, 7, 8, 7, 18, 1, 19  }, 
        { 0.000300447, 1.06918, 0.692008, 255, 123.645, 0.00175661, 1.14413, 0.704185, 255, 30.7197, 0.00295112, 1.72136, 0.510144, 155.61, 0, 0.00330829, 1.68312, 0.385476, 133.826, 0, 10, 4, 19, 12, 20, 20, 19  }, 
        { 0.00301946, 1.26806, 0.874713, 255, 112.791, 0.00200657, 1.15349, 0.527153, 144.335, 0, 0.00437683, 1.02222, 0.226566, 220.358, 0, 0.00153543, 1.23277, 0.433674, 147.895, 0, 18, 18, 2, 9, 19, 10, 8  }, 
        { 0.00393023, 1.04812, 0.775863, 255, 4.76374, 0.00189107, 1.59402, 0.593506, 255, 23.5183, 0.002969, 1.82398, 0.884361, 255, 109.21, 0.00138051, 1.03236, 0.412641, 255, 106.337, 15, 5, 2, 16, 3, 11, 4  }, 
        { 0.00403793, 1.29611, 0.0241327, 255, 1.14723, 0.00419221, 1.54365, 0.130692, 255, 68.4096, 0.000203907, 1.29222, 0.542622, 255, 67.0151, 0.00339374, 1.73455, 0.772702, 255, 108.007, 2, 14, 11, 12, 1, 19, 17  }, 
        { 0.00421077, 1.62832, 0.678583, 255, 25.7982, 0.00456897, 1.19778, 0.351609, 236.937, 0, 0.00090973, 1.57796, 0.548699, 255, 106.513, 0.0049051, 1.34542, 0.845517, 243.715, 0, 3, 13, 19, 14, 12, 18, 11  }, 
        { 0.00242541, 1.26513, 0.366927, 195.487, 0, 0.00283805, 1.64033, 0.56611, 198.915, 0, 0.00467769, 1.52337, 0.288103, 255, 62.527, 0.000289031, 1.0572, 0.135708, 255, 117.495, 1, 18, 10, 19, 3, 7, 20  }, 
        { 0.00363848, 1.30626, 0.208751, 255, 45.1014, 0.0010332, 1.0217, 0.230821, 186.371, 0, 0.00469378, 1.72929, 0.55803, 255, 20.9194, 0.00274788, 1.7118, 0.782838, 255, 17.3484, 16, 17, 10, 9, 17, 3, 15  }, 
        { 0.00233168, 1.16015, 0.776674, 255, 38.6033, 0.00293904, 1.46903, 0.336401, 199.592, 0, 0.00431647, 1.91987, 0.96362, 155.833, 0, 0.00434461, 1.13703, 0.936642, 255, 102.153, 1, 7, 16, 19, 7, 20, 13  }, 
        { 0.000963511, 1.91385, 0.204489, 255, 90.3295, 0.00314563, 1.61808, 0.817556, 209.778, 0, 0.0039843, 1.16871, 0.795311, 255, 37.2211, 0.00344946, 1.14775, 0.71877, 255, 13.978, 5, 1, 4, 3, 11, 18, 7  }, 
        { 0.000329917, 1.20623, 0.62146, 255, 115.689, 0.00130115, 1.14033, 0.776364, 240.196, 0, 0.00158528, 1.7074, 0.562407, 255, 61.2877, 0.00401054, 1.31076, 0.410234, 255, 67.7744, 12, 3, 9, 3, 12, 1, 20  },
        { 0.00266182, 1.78243, 0.0520579, 223.903, 0, 0.00216979, 1.73208, 0.872454, 222.005, 0, 0.00421739, 1.33445, 0.726092, 255, 66.1506, 0.00298868, 1.41205, 0.180788, 255, 31.1703, 18, 3, 19, 8, 20, 9, 17  },
        { 0.000394211, 1.06628, 0.5439, 255, 65.4858, 0.00368412, 1.71305, 0.21156, 224.933, 0, 0.00312486, 1.4826, 0.400496, 255, 101.739, 0.00070516, 1.25668, 0.792335, 181.758, 0, 18, 5, 1, 6, 14, 2, 15  },
        { 0.00208533, 1.07737, 0.588447, 255, 113.48, 0.00173966, 1.46174, 0.27113, 155.83, 0, 0.000420562, 1.89793, 0.862951, 212.049, 0, 0.00240623, 1.97701, 0.29683, 255, 34.8509, 13, 16, 14, 20, 7, 16, 16  },
        { 0.00232213, 1.80063, 0.740071, 211.18, 0, 0.00208007, 1.44425, 0.386583, 153.132, 0, 0.00213378, 1.7218, 0.896703, 255, 109.536, 0.00466441, 1.21407, 0.015591, 255, 122.947, 7, 19, 18, 18, 1, 10, 15  },
        { 0.00298249, 1.01518, 0.985046, 255, 98.105, 0.00482285, 1.46182, 0.890558, 183.455, 0, 0.00446684, 1.42552, 0.269788, 255, 9.45223, 0.00019915, 1.7542, 0.253839, 185.45, 0, 1, 16, 19, 18, 14, 7, 8  },
        { 0.00210754, 1.2693, 0.50976, 133.479, 0, 0.00301548, 1.54324, 0.752001, 255, 27.9665, 0.00486328, 1.75967, 0.2474, 255, 44.0202, 0.00133119, 1.37526, 0.259768, 141.338, 0, 19, 7, 19, 1, 5, 20, 6  },
        { 0.00402115, 1.03615, 0.833721, 196.275, 0, 0.0009603, 1.64186, 0.119996, 144.092, 0, 0.001466, 1.53068, 0.934344, 255, 49.443, 0.00479755, 1.86938, 0.724643, 177.677, 0, 11, 3, 15, 17, 16, 15, 16  },
        { 0.00456391, 1.20328, 0.710852, 255, 38.1713, 0.00104485, 1.59678, 0.670533, 255, 68.2409, 0.0028289, 1.82738, 0.366812, 255, 56.4642, 0.000945788, 1.38166, 0.388215, 255, 80.0691, 5, 12, 19, 4, 13, 5, 7  },
        { 0.00416981, 1.82297, 0.652325, 255, 57.9346, 0.00238215, 1.45305, 0.563832, 255, 53.0966, 0.00243942, 1.09756, 0.659876, 236.147, 0, 0.00242872, 1.99535, 0.442064, 255, 86.0893, 12, 15, 15, 14, 15, 5, 11  },
        { 0.00076736, 1.59229, 0.988706, 255, 55.3941, 0.0026845, 1.74464, 0.452673, 255, 27.7116, 0.00290624, 1.17634, 0.0378524, 255, 13.6303, 0.00359535, 1.82502, 0.333331, 128.324, 0, 11, 5, 12, 6, 14, 14, 4  },
    };*/

    /*vector<vector<double>> target = {
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },
        { 1 },

        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
        { 0 },
    };*/

    vector<vector<double>> inputs {
        { 0, 0 },
        { 0, 1 },
        { 1, 0 },
        { 1, 1 },
    };

    vector<vector<double>> target {
        { 0 },
        { 1 },
        { 1 },
        { 0 },
    };

    net.train(inputs, target);

    return 0;

    for (int i = 0; i < inputs.size(); i++) {
        auto temp = net.run(inputs[i]);
        cout << endl << "#----------#" << endl;
        cout << "INPUT:  " << inputs[i][0] << " " << inputs[i][1] << endl;
        cout << "OUTPUT: " << temp[0] << endl;
        cout << "TARGET: " << target[i][0] << endl;
        cout << endl;
    }
}